name: Store stats (diário)

on:
  schedule:
    - cron: "5 12 * * *"      # 09:05 BRT (GitHub usa UTC)
  workflow_dispatch:

jobs:
  fetch-store:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Instala dependências
        run: |
          npm init -y
          npm i google-play-scraper@latest

      - name: Cria script e executa
        env:
          ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
          IOS_APP_ID:     ${{ secrets.IOS_APP_ID }}
          WORKER_URL:     ${{ secrets.WORKER_URL }}
          IMPORT_TOKEN:   ${{ secrets.IMPORT_TOKEN }}
        run: |
          cat > fetch-store.cjs <<'JS'
          const gplay = require('google-play-scraper');
          const { ANDROID_APP_ID, IOS_APP_ID, WORKER_URL, IMPORT_TOKEN } = process.env;

          async function post(payload){
            const res = await fetch(`${WORKER_URL}/api/store-stats`, {
              method: 'POST',
              headers: {
                'content-type':'application/json',
                Authorization: `Bearer ${IMPORT_TOKEN}`
              },
              body: JSON.stringify(payload)
            });
            console.log('POST', payload.platform, res.status);
            if (!res.ok) {
              const t = await res.text().catch(()=> '');
              throw new Error(`store-stats ${payload.platform} -> ${res.status}: ${t}`);
            }
          }

          (async () => {
            // ANDROID — com histograma oficial
            try {
              const app = await gplay.app({ appId: ANDROID_APP_ID, country:'br', lang:'pt' });
              await post({
                platform:'android',
                app_id: ANDROID_APP_ID,
                avg: app.score || 0,
                ratings_total: app.ratings || 0,
                s1: app.histogram?.['1']||0,
                s2: app.histogram?.['2']||0,
                s3: app.histogram?.['3']||0,
                s4: app.histogram?.['4']||0,
                s5: app.histogram?.['5']||0
              });
            } catch (e) {
              console.error('android fail:', e.message || e);
            }

            // iOS — Apple não expõe histograma (só média/total)
            try {
              const r = await fetch(`https://itunes.apple.com/lookup?id=${IOS_APP_ID}&country=br`);
              const j = await r.json(); const it = (j.results||[])[0] || {};
              await post({
                platform:'ios',
                app_id: IOS_APP_ID,
                avg: it.averageUserRating ?? it.averageUserRatingForCurrentVersion ?? 0,
                ratings_total: it.userRatingCount ?? it.userRatingCountForCurrentVersion ?? 0,
                s1:0, s2:0, s3:0, s4:0, s5:0
              });
            } catch (e) {
              console.error('ios fail:', e.message || e);
            }
          })().catch(err => { console.error(err); process.exitCode = 1; });
          JS

          node fetch-store.cjs
